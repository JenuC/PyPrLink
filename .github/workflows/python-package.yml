# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
    paths:
      - '**.py'                  # Any Python files
      - 'tests/**'              # Any files in tests directory
      - 'pyproject.toml'        # Package configuration
      - '.github/workflows/**'   # Workflow files themselves
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.py'
      - 'tests/**'
      - 'pyproject.toml'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest build python-dotenv
        # Install the package itself in editable mode with dev dependencies
        pip install -e .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        # Create a .env file for testing
        echo "ADDRESS=localhost" > .env
        echo "PORT=5000" >> .env
        echo "LOG_LEVEL=ERROR" >> .env
        pytest -v
